#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# Don't push to master if code won't run

RED='\033[0;31m'
NC='\033[0m' # No Color

remote="$1"
url="$2"

git stash -q --keep-index

if bun run build; then
	git stash pop -q 2> /dev/null
	echo ""
	exit 0
else
	git stash pop -q 2> /dev/null
	echo "${RED}[PRE-PUSH]: Stopped push, fix the build issues first.${NC}\n"
	exit 1
fi

